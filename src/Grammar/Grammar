# Grammar for Zerg
#
# Author  : cmj <cmj@cmj.tw>
# Date    : 2016/10/21
# Version : 0.2.1
#
# SPEC - provide minimal usage arithmetic with variable assignment

stmt   : [ assign | print ] NEWLINE
assign : [ WORD '=' ] test
print  : 'print' test
test   : or_test

or_test   : and_test ( 'or'  and_test )*
and_test  : xor_test ( 'and' xor_test )*
xor_test  : not_test ( 'xor' not_test )*
not_test  : [ 'not' ] bit_or 

bit_or   : bit_and ( '|' bit_and )*
bit_and  : bit_xor ( '&' bit_xor )*
bit_xor  : shift   ( '^' shift   )*

shift : arith ( ( '<<' | '>>' ) arith )*
arith : pow   ( ( '+' | '-' )   pow   )*
pow   : atom  ( ( '*' | '/' | '%' | '~' )  atom )*
atom  : [ '+' | '-' | '~' ] ( NUMBER | WORD )
