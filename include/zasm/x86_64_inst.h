/* Copyright (C) 2014-2016 cmj. All right reserved. */
#ifndef __ZASM_X86_64_INST_H__
#  define __ZASM_X86_64_INST_H__

#define OPERAND_SIZE_OFFSET		8
#define OPERAND_SIZE(ctx)	 	((ctx) >> OPERAND_SIZE_OFFSET)
#define PARAM_SIZE				0x08
#define MAX_CMD_LEN				8

#include "zasm/registers.h"

#define USED_REGISTERS		"rcx", "rbx", "r8", "r9", "r10", "r11", 
#define SYSCALL_PARAM		"rax", "rdi", "rsi", "rdx", "r10", "r8", "r9"
#define SYSCALL_REG			"rax"

#define X86_REAL_MODE	1
#define X86_PROTECTED_MODE	2

typedef struct _x86_64_inst_tag_ {
	char cmd[MAX_CMD_LEN];
	unsigned char opcode;
	unsigned int op1, op2;
	unsigned int flags;
} X86_64_INST;

enum _x86_64_inst_type_ {
	INST_NONE		= 0x0000,

	INST_IMM		= 0x0002,
	INST_MEM		= 0x0004,
	INST_REG		= 0x0008,

	INST_SIZE8		= 0x0010,
	INST_SIZE16		= 0x0020,
	INST_SIZE32		= 0x0040,
	INST_SIZE64		= 0x0080,
	INST_SIZE128	= 0x0100,	/* XMM - 128-bit registers */
	INST_SIZE256	= 0x0200,	/* YMM - 256-bit registers */
	INST_SIZE512	= 0x0400,	/* ZMM - 512-bit registers */
	INST_SIZE_ALL	= INST_SIZE8 | INST_SIZE16 | INST_SIZE32 | INST_SIZE64,

	INST_SIZE16_32		= INST_SIZE16 | INST_SIZE32,
	INST_SIZE16_32_64	= INST_SIZE16 | INST_SIZE32 | INST_SIZE64,

	INST_IMM8			= INST_IMM | INST_SIZE8,
	INST_IMM16			= INST_IMM | INST_SIZE16,
	INST_IMM64			= INST_IMM | INST_SIZE64,
	INST_IMM16_32		= INST_IMM | INST_SIZE16_32,
	INST_IMM16_32_64	= INST_IMM | INST_SIZE16_32_64,
	INST_IMM_ALL		= INST_IMM | INST_SIZE_ALL,

	INST_MEM8			= INST_MEM | INST_SIZE8,
	INST_MEM16			= INST_MEM | INST_SIZE16,
	INST_MEM32			= INST_MEM | INST_SIZE32,
	INST_MEM64			= INST_MEM | INST_SIZE64,
	INST_MEM16_32		= INST_MEM | INST_SIZE16_32,
	INST_MEM16_32_64	= INST_MEM | INST_SIZE16_32_64,
	INST_MEM_ALL		= INST_MEM | INST_SIZE_ALL,

	INST_REG8			= INST_REG | INST_SIZE8,
	INST_REG16			= INST_REG | INST_SIZE16,
	INST_REG64			= INST_REG | INST_SIZE64,
	INST_REG16_32		= INST_REG | INST_SIZE16_32,
	INST_REG16_32_64	= INST_REG | INST_SIZE16_32_64,
	INST_REG_ALL		= INST_REG | INST_SIZE_ALL,
	INST_XMM			= INST_REG | INST_SIZE128,
	INST_YMM			= INST_REG | INST_SIZE256,
	INST_ZMM			= INST_REG | INST_SIZE512,

	INST_REG_MEM16_32_64	= INST_REG16_32_64 | INST_MEM16_32_64,

	INST_TWO_BYTE		= 0x01000,	/* Two byte opcode */
	INST_SECONDARY		= 0x02000,	/* Appended value to the opcode */
	INST_OPCODE_EXT		= 0x04000,	/* Register/Opcode Field */
	INST_REG_OPERANDS	= 0x08000,	/* Register operand field */

	INST_OPCODE_MULTI	= 0x10000,
	INST_REG_SWAP		= 0x20000,
	INST_EXTENSION_64	= 0x40000,
	INST_SINGLE_FP		= 0x80000,
	INST_DOUBLE_FP		= 0x100000,
	INST_REG_SEGMEM		= 0x200000,

	INST_REG_RAX		= 0x1000000,
	INST_REG_AH			= 0x1000001,
	INST_REG_AL			= 0x1000002,
	INST_REG_AX			= 0x1000004,
	INST_REG_EAX		= 0x1000008,
	INST_REG_RCX		= 0x2000000,
	INST_REG_CL			= 0x2000001,
	INST_REG_SPECIFY	= 0xF000000,

	INST_ERR			= 0xFFFFFFFF,
};

#endif /* __ZASM_X86_64_INST_H__ */
